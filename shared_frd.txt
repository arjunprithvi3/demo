MainActivity.java

package com.example.shared_frd;

import androidx.appcompat.app.AppCompatActivity;

import android.annotation.SuppressLint;
import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import android.view.animation.AlphaAnimation;
import android.view.animation.Animation;
import android.view.animation.AnimationSet;
import android.view.animation.RotateAnimation;
import android.view.animation.ScaleAnimation;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.RelativeLayout;

public class MainActivity extends AppCompatActivity {

    Button b1;

    @SuppressLint("MissingInflatedId")
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        b1 = findViewById(R.id.button);
        b1.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                // Create an ImageView dynamically
                ImageView imageView = new ImageView(MainActivity.this);
                imageView.setImageResource(R.drawable.kakashi); // Set your image resource here
                RelativeLayout.LayoutParams params = new RelativeLayout.LayoutParams(
                        RelativeLayout.LayoutParams.WRAP_CONTENT,
                        RelativeLayout.LayoutParams.WRAP_CONTENT
                );
                params.addRule(RelativeLayout.CENTER_IN_PARENT, RelativeLayout.TRUE);
                imageView.setLayoutParams(params);
                // Add the ImageView to the main layout
                ((RelativeLayout) findViewById(R.id.main_layout)).addView(imageView);

                // Create animations
                AnimationSet animationSet = new AnimationSet(true);
                animationSet.setDuration(800); // Set the duration for the animation

                // Rotate animation
                Animation rotateAnimation = new RotateAnimation(0, 360,
                        Animation.RELATIVE_TO_SELF, 0.5f,
                        Animation.RELATIVE_TO_SELF, 0.5f);
                rotateAnimation.setDuration(800);

                // Scale animation (zoom in)
                Animation scaleAnimation = new ScaleAnimation(1, 2, 1, 2,
                        Animation.RELATIVE_TO_SELF, 0.5f,
                        Animation.RELATIVE_TO_SELF, 0.5f);
                scaleAnimation.setDuration(800);

                // Disappear animation (fade out)
                AlphaAnimation alphaAnimation = new AlphaAnimation(1, 0);
                alphaAnimation.setDuration(1000);

                // Add animations to the animation set
                animationSet.addAnimation(rotateAnimation);
                animationSet.addAnimation(scaleAnimation);
                animationSet.addAnimation(alphaAnimation);

                // Set animation listener to remove the ImageView after animation ends
                animationSet.setAnimationListener(new Animation.AnimationListener() {
                    @Override
                    public void onAnimationStart(Animation animation) {}

                    @Override
                    public void onAnimationEnd(Animation animation) {
                        ((RelativeLayout) findViewById(R.id.main_layout)).removeView(imageView);
                        // Start the SettingsActivity
                        startActivity(new Intent(MainActivity.this, SettingsActivity.class));
                    }

                    @Override
                    public void onAnimationRepeat(Animation animation) {}
                });

                // Start the animation
                imageView.startAnimation(animationSet);
            }
        });
    }
}





activity_main.xml

<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:id="@+id/main_layout"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity">

    <Button
        android:id="@+id/button"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_centerInParent="true"
        android:text="Settings" />

</RelativeLayout>




SettingsActivity.java

package com.example.shared_frd;

import android.content.Context;
import android.content.SharedPreferences;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Switch;
import android.widget.Toast;

import androidx.appcompat.app.AppCompatActivity;
import androidx.appcompat.app.AppCompatDelegate;

import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;

public class SettingsActivity extends AppCompatActivity {

    private SharedPreferences sharedPreferences;
    private static final String SHARED_PREF_NAME = "myPrefs";
    private static final String DARK_MODE_KEY = "darkMode"; // Key for dark mode setting
    private static final String USERNAME_KEY = "username";
    private static final String PASSWORD_KEY = "password";

    private EditText editTextUsername, editTextPassword , name , ID1;
    private Button buttonSave,firesave;
    private Switch switchDarkMode;

    // Firebase
    private DatabaseReference mDatabase;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_settings);

        // Initialize SharedPreferences
        sharedPreferences = getSharedPreferences(SHARED_PREF_NAME, Context.MODE_PRIVATE);

        // Firebase initialization
        mDatabase = FirebaseDatabase.getInstance().getReference();

        // Find views
        switchDarkMode = findViewById(R.id.switch_dark_mode);
        editTextUsername = findViewById(R.id.edit_text_username);
        editTextPassword = findViewById(R.id.edit_text_password);
        name=findViewById(R.id.edit_text_name);
        ID1=findViewById(R.id.edit_text_id);
        buttonSave = findViewById(R.id.button_save);
        firesave=findViewById(R.id.button2);

        // Load the previous state of the dark mode setting (if available)
        switchDarkMode.setChecked(sharedPreferences.getBoolean(DARK_MODE_KEY, false));

        // Set username and password if previously saved
        editTextUsername.setText(sharedPreferences.getString(USERNAME_KEY, ""));
        editTextPassword.setText(sharedPreferences.getString(PASSWORD_KEY, ""));

        // Handle switch toggle events for dark mode
        switchDarkMode.setOnCheckedChangeListener((buttonView, isChecked) -> {
            SharedPreferences.Editor editor = sharedPreferences.edit();
            editor.putBoolean(DARK_MODE_KEY, isChecked);
            editor.apply();
            applyDarkMode(isChecked);
            Toast.makeText(SettingsActivity.this, "Dark Mode " + (isChecked ? "Enabled" : "Disabled"), Toast.LENGTH_SHORT).show();
        });

        // Handle save button click
        buttonSave.setOnClickListener(v -> {
            String username = editTextUsername.getText().toString();
            String password = editTextPassword.getText().toString();

            // Save username and password
            SharedPreferences.Editor editor = sharedPreferences.edit();
            editor.putString(USERNAME_KEY, username);
            editor.putString(PASSWORD_KEY, password);
            editor.apply();

            Toast.makeText(SettingsActivity.this, "Data Saved", Toast.LENGTH_SHORT).show();
        });


        firesave.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                String uname = name.getText().toString();
                String ID = ID1.getText().toString();

                mDatabase.child("users").child("username").setValue(uname);
                mDatabase.child("users").child("password").setValue(ID);
            }
        });
    }

    private void applyDarkMode(boolean isDarkMode) {
        int mode = isDarkMode ? AppCompatDelegate.MODE_NIGHT_YES
                : AppCompatDelegate.MODE_NIGHT_NO;
        AppCompatDelegate.setDefaultNightMode(mode);
        recreate(); // Apply the new theme immediately
    }
}




activity_settings.xml

<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent">

    <!-- Dark Mode Switch -->
    <Switch
        android:id="@+id/switch_dark_mode"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_centerHorizontal="true"
        android:layout_marginTop="50dp"
        android:text="Dark Mode"
        android:padding="16dp" />

    <!-- Username EditText -->
    <EditText
        android:id="@+id/edit_text_username"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_below="@id/switch_dark_mode"
        android:layout_marginHorizontal="16dp"
        android:layout_marginTop="16dp"
        android:hint="Username" />

    <!-- Password EditText -->
    <EditText
        android:id="@+id/edit_text_password"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_below="@id/edit_text_username"
        android:layout_marginHorizontal="16dp"
        android:layout_marginTop="8dp"
        android:hint="Password"
        android:inputType="textPassword" />

    <!-- Save Button -->
    <Button
        android:id="@+id/button_save"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_below="@id/edit_text_password"
        android:layout_centerHorizontal="true"
        android:layout_marginTop="16dp"
        android:text="Save" />

    <EditText
        android:id="@+id/edit_text_name"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:ems="10"
        android:inputType="text"
        android:hint="Type your Name"
        android:translationX="100dp"
        android:translationY="450dp" />

    <EditText
        android:id="@+id/edit_text_id"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:ems="10"
        android:inputType="text"
        android:hint="type your ID"
        android:translationX="100dp"
        android:translationY="520dp" />

    <Button
        android:id="@+id/button2"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="save to firebase"
        android:translationX="160dp"
        android:translationY="580dp" />

</RelativeLayout>



<activity android:name=".SettingsActivity"/>